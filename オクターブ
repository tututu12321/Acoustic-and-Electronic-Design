```python
import numpy as np
import matplotlib.pyplot as plt

# Function to create a sine wave signal
def create_sine_wave(freq, duration, sample_rate):
    t = np.linspace(0, duration, int(sample_rate * duration), endpoint=False)
    wave = 0.5 * np.sin(2 * np.pi * freq * t)  # Amplitude of 0.5
    return t, wave

# Function to generate octaves
def generate_octaves(base_freq, num_octaves, duration, sample_rate):
    octaves = []
    for i in range(-num_octaves, num_octaves + 1):
        freq = base_freq * (2 ** i)  # Calculate frequency for the current octave
        t, wave = create_sine_wave(freq, duration, sample_rate)
        octaves.append((t, wave, freq))
    return octaves

# Parameters
base_freq = 440  # Base frequency (A4) in Hz
num_octaves = 3  # Number of octaves to generate above and below
duration = 1.0  # Duration in seconds
sample_rate = 1000  # Sample rate in Hz

# Generate octaves
octave_signals = generate_octaves(base_freq, num_octaves, duration, sample_rate)

# Plotting the results
plt.figure(figsize=(15, 10))

for i, (t, wave, freq) in enumerate(octave_signals):
    plt.subplot(num_octaves * 2 + 1, 1, i + 1)
    plt.plot(t, wave, label=f'Frequency: {freq} Hz')
    plt.title(f'Sine Wave for {freq} Hz')
    plt.xlabel('Time [s]')
    plt.ylabel('Amplitude')
    plt.grid()
    plt.legend()

plt.tight_layout()
plt.show()
```

import numpy as np
import matplotlib.pyplot as plt

# サンプリング設定
sampling_rate = 44100  # サンプリング周波数 (44.1 kHz)
duration = 1  # 音の持続時間 (秒)
t = np.linspace(0, duration, int(sampling_rate * duration), endpoint=False)  # 時間軸

# 音の三要素
# 1. 音高 (Pitch): 周波数
frequency = 440  # A4 (440 Hz)
wave_pitch = np.sin(2 * np.pi * frequency * t)  # 正弦波で音高を表現

# 2. 音量 (Volume): 振幅
amplitude = 0.5  # 音量 (0.0 ～ 1.0)
wave_volume = amplitude * wave_pitch  # 音量を適用した波形

# 3. 音色 (Timbre): 高調波の混合
wave_timbre = wave_volume + 0.3 * np.sin(2 * np.pi * 2 * frequency * t)  # 基本周波数 + 高調波

# 各要素の波形プロット
plt.figure(figsize=(12, 8))

# 音高
plt.subplot(3, 1, 1)
plt.plot(t[:1000], wave_pitch[:1000], label="Pitch (440 Hz)")
plt.title("1. Pitch: Pure Tone (440 Hz)")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()

# 音量
plt.subplot(3, 1, 2)
plt.plot(t[:1000], wave_volume[:1000], label="Volume (Amplitude: 0.5)")
plt.title("2. Volume: Adjusted Amplitude")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()

# 音色
plt.subplot(3, 1, 3)
plt.plot(t[:1000], wave_timbre[:1000], label="Timbre (440 Hz + Harmonics)")
plt.title("3. Timbre: Added Harmonics")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()

plt.tight_layout()
plt.show()

# FFTスペクトルで周波数成分を確認
fft_result = np.fft.fft(wave_timbre)
frequencies = np.fft.fftfreq(len(t), d=1/sampling_rate)
positive_freqs = frequencies[:len(frequencies) // 2]
positive_fft_result = np.abs(fft_result[:len(fft_result) // 2])

plt.figure(figsize=(12, 6))
plt.plot(positive_freqs, positive_fft_result, label="Frequency Spectrum")
plt.title("Frequency Spectrum of the Timbre")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()
plt.tight_layout()
plt.show()

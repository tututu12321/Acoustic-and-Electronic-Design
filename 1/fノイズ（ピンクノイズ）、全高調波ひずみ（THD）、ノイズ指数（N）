import numpy as np
import matplotlib.pyplot as plt

# 1/fノイズ（ピンクノイズ）の計算
# 周波数範囲と1/fノイズ指数の設定
f = np.logspace(-1, 3, 500)  # 周波数 0.1Hz から 1000Hz
alpha = 1  # 1/fノイズ指数

# 1/fノイズのパワースペクトル密度
S_f = 1 / f**alpha

# 高調波ひずみ（THD）の計算
A1 = 1  # 基本波の振幅
A2 = 0.1  # 2次高調波の振幅
A3 = 0.05  # 3次高調波の振幅
A4 = 0.02  # 4次高調波の振幅

# THDの計算
THD = np.sqrt(A2**2 + A3**2 + A4**2) / A1
THD_percentage = THD * 100  # パーセント表示

# ノイズ指数（N）の計算
S_signal = 10  # 信号成分のパワー
S_noise = 1    # ノイズ成分のパワー

# ノイズ指数の計算
N = S_noise / S_signal

# 結果の表示
print(f"THD (Total Harmonic Distortion) = {THD_percentage:.2f}%")
print(f"Noise Index (N) = {N:.2f}")

# 1/fノイズのグラフ描画
plt.figure(figsize=(8, 6))

# 1/fノイズのパワースペクトル密度
plt.loglog(f, S_f, label='1/f Noise (Pink Noise)', color='b')

# ラベルとタイトル
plt.title('Power Spectral Density of 1/f Noise')
plt.xlabel('Frequency (Hz)')
plt.ylabel('Power Spectral Density (S(f))')
plt.grid(True, which="both", ls="--")
plt.legend()

# グラフ表示
plt.show()

# 高調波成分の振幅とTHDの計算
print(f"THD (Total Harmonic Distortion) = {THD_percentage:.2f}%")
